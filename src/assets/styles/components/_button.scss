/*
 * BUTTON
 */

@mixin setAuButton($color, $color-hover, $bkg-color, $bkg-hover-color) {
    .au-button-element {
        // Wrapper
        background-color: $bkg-color;
        padding: 5px 25px;
        line-height: 1.5rem;
        border: none;
        border-radius: 4px;
        box-shadow: 0px 2px 10px 3px rgba(0, 0, 0, 0.15);
        cursor: pointer;
        transition: color 0.3s ease,
                    background-color 0.3s ease;
        color: $color;

        span {
            position: absolute;
            background: $color;
            transform: translate(-50%, -50%);
            pointer-events: none;
            border-radius: 50%;
            animation: ripple 0.6s linear infinite;

            @keyframes ripple {
                0% {
                    width: 0;
                    height: 0;
                    opacity: 0.3;
                }

                100% {
                    width: 1000px;
                    height: 1000px;
                    opacity: 0;
                }
            }
        }

        &:hover,
        &:active {
            color: $color-hover;
            background-color: $bkg-hover-color;
        }

        &:focus {
            outline: none;
        }

        &:disabled {
            color: var(--color-white);
            background-color: var(--color-disabled);
            box-shadow: none;
            pointer-events: none;
        }
    }
}

.au-button {
    display: inline-block;

    .au-button-element {
        font-family: Inter, Helvetica;
        font-size: $font-size-regular;
        font-weight: $font-weight-medium;
        position: relative;
        overflow: hidden;
    }

    // Color prop
    &[au-color="primary"] {
        @include setAuButton(var(--color-white), var(--color-white), var(--color-caribbean-green), var(--color-caribbean-green-hover));
    }

    &[au-color="hight"] {
        @include setAuButton(var(--color-white), var(--color-white), var(--color-hight-contrast), var(--color-hight-contrast-hover));
    }

    // Transparent
    &[au-transparent] {
        // Color prop
        &[au-color="primary"] {
            @include setAuButton($color-caribbean-green, $color-caribbean-green-hover, transparent, transparent);
        }

        &[au-color="hight"] {
            @include setAuButton($color-hight-contrast, $color-hight-contrast-hover, transparent, transparent);
        }

        .au-button-element {
            box-shadow: none !important;
        }
    }

    // Block
    &[au-block] {
        display: block;

        button {
            width: 100%;
        }
    }

    // Circle
    &[au-circle] {
        .au-button-element {
            border-radius: 50px !important;
        }
    }
}